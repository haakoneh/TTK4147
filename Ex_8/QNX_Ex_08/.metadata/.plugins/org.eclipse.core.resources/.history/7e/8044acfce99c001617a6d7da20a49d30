
#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <errno.h>
#include <string.h>
#include <fcntl.h>
#include <sys/dispatch.h>
#include <sys/mman.h>
#include <pthread.h>
#include <process.h>

typedef struct pid_data{
	pthread_mutex_t pid_mutex;
	pid_t pid;
}pid_data;



int main1() {
	pid_data *other_struct;

	int file_descriptor = shm_open("/sharedpid",O_RDWR,S_IRWXU);
	void *s_mem_ptr = mmap(0,sizeof(pid_data),PROT_READ | PROT_WRITE,MAP_SHARED,file_descriptor,0);

	other_struct = (pid_data* )s_mem_ptr;
	printf("Pid is: %i", other_struct->pid);


	return EXIT_SUCCESS;
}
